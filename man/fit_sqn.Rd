% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sqn.R
\name{fit_sqn}
\alias{fit_sqn}
\alias{approx_sqn}
\alias{is_sqn_valid}
\title{Fitting the sqn functions}
\usage{
fit_sqn(p, q, tol = .Machine$double.eps^2)

approx_sqn(
  q,
  p = NULL,
  thin = FALSE,
  n_grid = 1000,
  s_grid = 2L,
  tol = .Machine$double.eps^2
)

is_sqn_valid(a, n_grid = 50L, s_grid = 2L)
}
\arguments{
\item{p}{the vector of probability values the quantiles q correspond to. This would be specified if sqn is fitted to the empirical CDF. Default is NULL.}

\item{q}{vector of quantile values (data)}

\item{tol}{tolerance for solve() and qr.solve(), default is .Machine$double.eps^2}

\item{thin}{logical. Should original data be thinned. Default is FALSE.}

\item{n_grid}{in case data thinning is performed, integer number of quantiles to extract from data, if data vector \code{q} is longer than this value}

\item{s_grid}{in case data thinning is performed, probability grid shape parameter passed to \code{qpd::make_pgrid()}. Default is 10.}

\item{a}{vector of \code{a}-coefficient parameters of sqn distribution}
}
\description{
Functions for fitting and sampling from sqn distribution
}
\details{
\code{fit_sqn} is for fitting the sqn function to the set of QP values.
Number of sqn terms will match the number of QP pairs.
\code{approx_sqn} is for approximating sqn function to the set of data.
\code{is_sqn_valid} is a function for checking if the sqn is valid
}
\examples{
p <- c(0.1, 0.5, 0.6, 0.9)
q <- c(4, 9, 10, 13)
a <- fit_sqn(p,q)
x <- rsqn(100, a)
approx_sqn(x)
a <- c(9,  1.8, -1.13, 9)
is_sqn_valid(a)
}
